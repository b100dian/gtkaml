#summary gtkaml introduction
*this is work in progress*
= Introduction =

gktaml enables you to quickly write user interfaces in GTK+ while _not_ losing any coding capabilities you would otherwise have.

This is a quick walk-trough on how to code in gtkaml and Vala.

== Hello World ==
I am not trying to compare against one of the 6 examples [http://www.vector-seven.com/2008/01/23/gtk-hello-world-in-six-different-languages/ here]

{{{
<Window xmlns="Gtk" xmlns:gtkaml="http://gtkaml.org/0.1" gtkaml:class="HelloWorldWindow" title="Hello World" destroy="{Gtk.main_quit}">
<![CDATA[
   public static int main (string[] args)
   {
       var window = new HelloWorldWindow ();
       window.show_all ();
       Gtk.main ();
   }
]]>
</Window>   
}}}

First, the root tag always defines a class. In this case, it's a class that extends `Gtk.Window` and it's named `HelloWorldWindow`.

The `xmlns="Gtk"` declaration does two things: 'imports' the Gtk vala namespace (`using Gtk;`) and second, assumes all you un-prefixed tags are classes from this namespace (e.g. `Window` is `Gtk.Window`)

If you have another namespace you would like included, use `xmlns:myns="Myns"` and prefix all your classes in that namespace with `myns` like this: `<myns:MyWidget ..`

The `gtkaml:class` is the name of the class you're defining. You can prefix it with a namespace (e.g `gtkaml:class='Myns.HelloWorldWindow'`) or use `gtkaml:namespace="Myns"` for that. 

The `xmlns:gtkaml="http://gtkaml.org/0.1"` is how gtkaml recognizes the prefix to `gtkaml` to be the one corresponding to the gtkaml syntax level 0.1. You can have it renamed (e.g. `xmlns:class="http://gtkaml.org/0.1"` if you think `class:name`, `class:namespace` is more readable.

`title` is a property of the Gtk.Window. The value of the `title` attribute is known to be string so you can just write the characters there. Same for numeric types (e.g. `spacing="0"` and booleans (e.g. `visible="true"`).
